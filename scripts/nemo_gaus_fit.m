function [fparams,fitresult, gof] = nemo_gaus_fit(D,l,c,index,t_index,figswitch)
%NEMO_GAUS_FIT Fits a Gaussian to an isobath of the Sand Engine.
%
%  Creates a fit of a Gaussian curve to a Sand Engine isobath. All fitting
%  parameters are returned in a struct. Results can be plotted optionally.
%
%   Syntax:
%   [fparams,fitresult, gof] = nemo_gaus_fit(D,l,c,index,t_index,figswitch)
%
%   Input: 
%       D: Data struct
%       l: alongshore coordinates of the isobath
%       c: cross-shore coordinates of the isobath
%       index: alongshore indices to take into account for fitting
%       t_indes: idem for time
%       figswitch: plot figure [true|false]
%
%   Output:
%   	fparams: fitting parameters
%
%   Example
%   [fparams,fitresult, gof] = nemo_gaus_fit(D,l,c,Index.zm,Time.all,true);
%
%  Data for 'untitled fit 1' fit:
%      X Input : l
%      Y Output: c
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also NEMO, NEMO_DEPTH_CONTOUR_LC, FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 23-Mar-2017 13:14:39
% Heavily customised by Bart Roesy 2017

%% Copyright notice
%   --------------------------------------------------------------------
%   Copyright (C) 2016-2021 TU Delft
%       Bart Roest
%
%       l.w.m.roest@tudelft.nl
%
%       Stevinweg 1
%       2628CN Delft
%
%   This library is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
%
%   This library is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this library.  If not, see <http://www.gnu.org/licenses/>.
%   --------------------------------------------------------------------

%% Version <http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.keywords.html>

% $Id: $
% $Date: $
% $Author: $
% $Revision: $
% $HeadURL: $
% $Keywords: $

%% Fit: 'ZM gaussian fit'.
fparams=struct('a',nan(size(c,1),1),...
                'b',nan(size(c,1),1),...
                'c',nan(size(c,1),1),...
                'd',nan(size(c,1),1),...
                'e',nan(size(c,1),1),...
                'rmse',nan(size(c,1),1),...
                'rsq',nan(size(c,1),1));

for t=t_index;
    
    [xData, yData] = prepareCurveData( l(t,index), c(t,index) );

    % Set up fittype and options.
    %ft =fittype( 'a*exp(-((x-b)^2/(2*c^2)))+e', 'independent', 'x', 'dependent', 'y' ); %WRONG!!
    ft = fittype( 'a*exp((-1/2)*((x-b)/c)^2)+e', 'independent', 'x', 'dependent', 'y');
    %ft = fittype( 'a*exp(-((x-b)/c)^2)+e', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.MaxIter = 4000;
    %opts.StartPoint = [1000 10000 1000 0 100];
    %opts.Lower=[0 8000 0 -Inf 0];
    opts.StartPoint = [1000 10000 1000 1000];%0];

    % Fit model to data.
    [fitresult, gof] = fit( xData, yData, ft, opts );

    if figswitch
        % Plot fit with data.
        %figure( 'Name', 'untitled fit 1' );
        figure;
        h = plot( fitresult, xData, yData );
        legend( h, 'Depth contour 0m NAP', 'Planform fit', 'Location', 'NorthEast' );
        % Label axes
        xlim(D.alongshore(index([1 end])));
        xlabel('Alongshore coordinate [m]');
        ylabel('Cross-shore coordinate [m]');
        grid on;
    end

    fn=fieldnames(fitresult);
    for f=1:length(fn);
        fparams.(fn{f})(t)=fitresult.(fn{f});
    end
    fparams.rmse(t)=gof.rmse;
    fparams.rsq(t)=gof.rsquare;
end

if figswitch
    figure; 
    ax1=subplot(3,2,1); 
        plot(ax1,D.time,fparams.a,'.-'); 
        grid on; 
        title('amplitude'); 
        ylabel('Cross-shore amplitude [m]');
        datetick('x','mm-yyyy');

    ax2=subplot(3,2,2); 
        plot(ax2,D.time,fparams.b,'.-'); 
        grid on; 
        title('mean'); 
        ylabel('Alongshore mean position [m]');
        datetick('x','mm-yyyy');

    ax3=subplot(3,2,3); 
        plot(ax3,D.time,fparams.c,'.-'); 
        grid on; 
        title('standard deviation'); 
        ylabel('Standard deviation [m]');
        datetick('x','mm-yyyy');

    ax4=subplot(3,2,4); 
        plot(ax4,D.time,fparams.e,'.-'); 
        grid on; 
        title('CS-offset of fit'); 
        ylabel('CS-offset w.r.t. RSP [m]');
        datetick('x','mm-yyyy');

    ax5=subplot(3,2,5); 
        plot(ax5,D.time,fparams.rsq,'.-'); 
        grid on; 
        title('R^2 of fit'); 
        ylabel('R^2');
        datetick('x','mm-yyyy');

    ax6=subplot(3,2,6); 
        plot(ax6,D.time,fparams.rmse,'.-'); 
        grid on; 
        title('Root-mean-squared error of fit'); 
        ylabel('RMSE');
        datetick('x','mm-yyyy');
end

end
%EOF