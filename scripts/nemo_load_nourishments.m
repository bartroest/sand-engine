function Nourishment=nemo_load_nourishments(D,t_start,t_end,file)
%NEMO_LOAD_NOURISHMENTS Loads data of nourishments along the Delfland coast.
%
% Loads nourishment data from RWS for Delfland and maps on alongshore
% coordinates of Shore surveys. Requires a filtered excel file, with only
% Delfland nourishments.
%
% Assumptions:
%   - The volume is equally distributed over the nourished area: V'=V_tot/length.
%   - The volume is only present between given boundaries
%   - The volume is present on january 1st of the given year.
%
% Syntax:
%   Nourishments=nemo_load_nourishments(D,start_year,end_year,file);
%
% Input:
%   D: datastruct
%   start_year: first year to take into account
%   end_year: last year to take into account
%   file: Excel suppletiedatabase.
%
% 1965<=Start_year<=2015;
%
%   See also: nemo

%% Copyright notice
%   --------------------------------------------------------------------
%   Copyright (C) 2016-2021 TU Delft
%       Bart Roest
%
%       l.w.m.roest@tudelft.nl
%
%       Stevinweg 1
%       2628CN Delft
%
%   This library is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
%
%   This library is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this library.  If not, see <http://www.gnu.org/licenses/>.
%   --------------------------------------------------------------------

%% Version <http://svnbook.red-bean.com/en/1.5/svn.advanced.props.special.keywords.html>

% $Id: $
% $Date: $
% $Author: $
% $Revision: $
% $HeadURL: $
% $Keywords: $

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: Suppleties_DL.xlsx
%    Worksheet: Blad1
%
% Auto-generated by MATLAB on 2017/03/07 17:20:22

%% Import the data
% filename='D:\Users\Bart\openearthrawdata\rijkswaterstaat\suppleties\processed\xls\Suppleties_DL.xlsx';s
[~, ~, raw0_0] = xlsread(file,'Blad1','G2:G55');
[~, ~, raw0_1] = xlsread(file,'Blad1','L2:M55');
[~, ~, raw0_2] = xlsread(file,'Blad1','Q2:Q55');
[~, ~, volume] = xlsread(file,'Blad1','P2:P55');
raw = [raw0_0,raw0_1,raw0_2,volume];

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Nourishment.jaar= data(:,1);
Nourishment.x1  = data(:,2).*1000;
Nourishment.x2  = data(:,3).*1000;
Nourishment.vol = data(:,4);
Nourishment.volumedl=data(:,5);

%% Post-processing
Nourishment.voldl=nan(52,1);
for t=(1965:year(now))-1964;
    try       
        Nourishment.voldl(t)=nansum(Nourishment.volumedl(Nourishment.jaar==t+1964 & Nourishment.x2<=17200));
    catch
        Nourishment.voldl(t)=0;
    end
end

Nourishment.acumvol=zeros(size(D.altitude,2),1);
Nourishment.cumvol=zeros(size(D.altitude,2),1);
% vmask=Suppletie.jaar>=startjaar;
    for n=find(Nourishment.jaar>=t_start,1):length(Nourishment.vol); 
        Nourishment.acumvol(D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))=Nourishment.acumvol(D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))+Nourishment.vol(n);
    end
    
    for n=1:find(Nourishment.jaar<=t_end,1,'last');%:length(Nourishment.vol); 
        Nourishment.cumvol(D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))=Nourishment.cumvol(D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))+Nourishment.vol(n);
    end
% %
time=D.time;
Nourishment.cumvolt=zeros(length(time),length(D.alongshore));
    for t=1:length(time);
        [Y,~]=datevec(time(t));
        for n=find(Nourishment.jaar>=t_start,1):find(Nourishment.jaar<=Y,1,'last'); 
            Nourishment.cumvolt(t, D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))=Nourishment.cumvolt(t, D.alongshore>=Nourishment.x2(n) & D.alongshore<=Nourishment.x1(n))+Nourishment.vol(n);
        end
    end
    

% %     uny=unique(Suppletie.jaar);
% %     for n=1:length(uny);
% %         cumvol=zeros(size(D.alongshore));
% %         for m=1:find(Suppletie.jaar<=uny(n),1,'last')
% %             cumvol(D.alongshore>=Suppletie.x2(m) & D.alongshore<=Suppletie.x1(m))=cumvol(D.alongshore>=Suppletie.x2(m) & D.alongshore<=Suppletie.x1(m))+Suppletie.vol(m);
% %         end
% %         Suppletie.cumsumvol(n,:)=cumvol';
% %         
% %     end
end
%EOF